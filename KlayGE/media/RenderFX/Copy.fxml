<?xml version='1.0'?>

<effect>
	<include name="PostProcess.fxml"/>

	<parameter type="sampler" name="point_sampler">
		<state name="filtering" value="min_mag_mip_point"/>
		<state name="address_u" value="clamp"/>
		<state name="address_v" value="clamp"/>
	</parameter>
	<parameter type="sampler" name="bilinear_sampler">
		<state name="filtering" value="min_mag_linear_mip_point"/>
		<state name="address_u" value="clamp"/>
		<state name="address_v" value="clamp"/>
	</parameter>

	<parameter type="texture2D" name="src_tex"/>
	<parameter type="texture2DMS" name="src_tex_ms"/>

	<shader>
		<![CDATA[
float4 CopyPS(float2 tc0 : TEXCOORD0, uint sample_index : SV_SampleIndex) : SV_Target
{
#if KLAYGE_EXPLICIT_MULTI_SAMPLE_SUPPORT && MULTI_SAMPLE_INPUT
	uint width, height, samples;
	src_tex_ms.GetDimensions(width, height, samples);
	int2 coord = tc0 * int2(width, height);
	return src_tex_ms.Load(coord, sample_index);
#else
	return src_tex.Sample(point_sampler, tc0);
#endif
}

float4 BilinearCopyPS(float2 tc0 : TEXCOORD0) : SV_Target
{
	return src_tex.Sample(bilinear_sampler, tc0);
}
		]]>
	</shader>

	<technique name="Copy">
		<pass name="p0">
			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="false"/>

			<state name="vertex_shader" value="PostProcessVS()"/>
			<state name="pixel_shader" value="CopyPS()"/>
		</pass>
	</technique>
	<technique name="CopyMS" inherit="Copy">
		<macro name="MULTI_SAMPLE_INPUT" value="1"/>
	</technique>

	<technique name="BilinearCopy">
		<pass name="p0">
			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="false"/>

			<state name="vertex_shader" value="PostProcessVS()"/>
			<state name="pixel_shader" value="BilinearCopyPS()"/>
		</pass>
	</technique>

	<technique name="AddCopy" inherit="Copy">
		<pass name="p0">
			<state name="blend_enable" value="true"/>
			<state name="blend_op" value="add"/>
			<state name="src_blend" value="one"/>
			<state name="dest_blend" value="one"/>
			<state name="blend_op_alpha" value="add"/>
			<state name="src_blend_alpha" value="one"/>
			<state name="dest_blend_alpha" value="one"/>
		</pass>
	</technique>

	<technique name="AddBilinearCopy" inherit="BilinearCopy">
		<pass name="p0">
			<state name="blend_enable" value="true"/>
			<state name="blend_op" value="add"/>
			<state name="src_blend" value="one"/>
			<state name="dest_blend" value="one"/>
			<state name="blend_op_alpha" value="add"/>
			<state name="src_blend_alpha" value="one"/>
			<state name="dest_blend_alpha" value="one"/>
		</pass>
	</technique>
</effect>
