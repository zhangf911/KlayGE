set(OPENALSOFT_PROJECT_DIR "${EXTERNAL_PROJECT_DIR}/openal-soft")
set(OPENALSOFT_OUTPUT_DIR "${EXTERNAL_PROJECT_DIR}/lib/openal-soft/${KLAYGE_PLATFORM_NAME}")

UpdateExternalLib("openal-soft" "https://github.com/kcat/openal-soft.git" "cee8100f1917ce21052b9cf255eeefdc839ae550")

if(KLAYGE_PLATFORM_WINDOWS_DESKTOP)
	set(ALSOFT_BACKEND_DSOUND ON CACHE BOOL "" FORCE)
else()
	set(ALSOFT_BACKEND_DSOUND OFF CACHE BOOL "" FORCE)
endif()
if(KLAYGE_PLATFORM_WINDOWS AND KLAYGE_COMPILER_GCC)
	set(ALSOFT_BUILD_IMPORT_LIB OFF CACHE BOOL "" FORCE)
endif()
set(ALSOFT_BACKEND_WAVE OFF CACHE BOOL "" FORCE)
set(ALSOFT_BACKEND_WINMM OFF CACHE BOOL "" FORCE)
set(ALSOFT_EXAMPLES OFF CACHE BOOL "" FORCE)
set(ALSOFT_INSTALL OFF CACHE BOOL "" FORCE)
set(ALSOFT_NO_CONFIG_UTIL ON CACHE BOOL "" FORCE)
set(ALSOFT_TESTS OFF CACHE BOOL "" FORCE)
set(ALSOFT_UTILS OFF CACHE BOOL "" FORCE)
set(ALSOFT_CONFIG OFF CACHE BOOL "" FORCE)
set(ALSOFT_HRTF_DEFS OFF CACHE BOOL "" FORCE)
set(ALSOFT_AMBDEC_PRESETS OFF CACHE BOOL "" FORCE)
if(CMAKE_CROSSCOMPILING)
	set(ALSOFT_NATIVE_TOOLS_PATH "${KLAYGE_HOST_BIN_DIR}" CACHE STRING "" FORCE)
endif()

if(KLAYGE_COMPILER_MSVC)
	set(HAVE___RESTRICT FALSE)
	if((KLAYGE_ARCH_NAME STREQUAL "arm") OR (KLAYGE_ARCH_NAME STREQUAL "arm64"))
		set(HAVE_BITSCANFORWARD_INTRINSIC FALSE)
		set(HAVE_BITSCANFORWARD64_INTRINSIC FALSE)
		set(HAVE_ARM_NEON_H FALSE)
	endif()
endif()

if(NOT (MSVC_VERSION GREATER 1900))
	add_definitions(-D_WIN32_IE_WIN10=0x0A00)
endif()
if(KLAYGE_PLATFORM_ANDROID)
	set(LIBTYPE STATIC)
endif()
add_subdirectory(${OPENALSOFT_PROJECT_DIR} "${CMAKE_CURRENT_BINARY_DIR}/openal-soft")

set_target_properties(OpenAL PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${OPENALSOFT_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${OPENALSOFT_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${OPENALSOFT_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${OPENALSOFT_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${OPENALSOFT_OUTPUT_DIR}
	RUNTIME_OUTPUT_DIRECTORY ${KLAYGE_BIN_DIR}
	RUNTIME_OUTPUT_DIRECTORY_DEBUG ${KLAYGE_BIN_DIR}
	RUNTIME_OUTPUT_DIRECTORY_RELEASE ${KLAYGE_BIN_DIR}
	RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${KLAYGE_BIN_DIR}
	RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${KLAYGE_BIN_DIR}
	LIBRARY_OUTPUT_DIRECTORY ${KLAYGE_BIN_DIR}
	LIBRARY_OUTPUT_DIRECTORY_DEBUG ${KLAYGE_BIN_DIR}
	LIBRARY_OUTPUT_DIRECTORY_RELEASE ${KLAYGE_BIN_DIR}
	LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${KLAYGE_BIN_DIR}
	LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL ${KLAYGE_BIN_DIR}
	PROJECT_LABEL OpenAL
	DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
	OUTPUT_NAME OpenAL${KLAYGE_OUTPUT_SUFFIX}
)

if(NOT CMAKE_CROSSCOMPILING)
	set(EXE_SUFFIX "")
	if(KLAYGE_PLATFORM_WINDOWS)
		set(EXE_SUFFIX ".exe")
	endif()
	SET(NATIVE_BIN_DIR  "${OpenAL_BINARY_DIR}/native-tools")
	SET(BIN2H_COMMAND  "${NATIVE_BIN_DIR}/bin2h")
	SET(BSINCGEN_COMMAND  "${NATIVE_BIN_DIR}/bsincgen")
	add_custom_target(copy-native-tools
		COMMAND ${CMAKE_COMMAND} -E copy "${BIN2H_COMMAND}${EXE_SUFFIX}" "${KLAYGE_BIN_DIR}"
		COMMAND ${CMAKE_COMMAND} -E copy "${BSINCGEN_COMMAND}${EXE_SUFFIX}" "${KLAYGE_BIN_DIR}"
		DEPENDS "native-tools"
	)
	set_target_properties(copy-native-tools PROPERTIES FOLDER "${EXTERNAL_VS_FOLDER_PREFIX}/openal-soft")
	add_dependencies(OpenAL copy-native-tools)
endif()

foreach(target
	"build_version" "native-tools" "OpenAL")
	set_target_properties(${target} PROPERTIES FOLDER "${EXTERNAL_VS_FOLDER_PREFIX}/openal-soft")
endforeach()
